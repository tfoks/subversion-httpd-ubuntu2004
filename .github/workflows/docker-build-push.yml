name: Docker Image Build and Push

#
# this pipeline only runs on releases
#

on:
  push:
    tags:
      - "*.*"

env:
  # TODO: Creates container named ACCOUNT/REPO
  #       Append /IMAGE-NAME to create a container named ACCOUNT/REPO/IMAGE-NAME
  IMAGE_NAME: ${{ github.repository }}

  # Registry.
  REGISTRY: docker.io

jobs:

  build:

    runs-on: ubuntu-20.04

    steps:
    - uses: actions/checkout@v2
    # we will use the Git tag as version tag for the image, i.e. only running on "create" events makes sense
    - name: Get the Ref
      id: get-ref
      uses: ankitvgupta/ref-to-tag-action@master
      with:
        ref: ${{ github.ref }}
        head_ref: ${{ github.head_ref }}
    - name: Get the tag
      run: echo "The tag was ${{ steps.get-ref.outputs.tag }}"
    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag ${{ env.IMAGE_NAME }}:${{ steps.get-ref.outputs.tag }}

  # Push image to Docker Hub
  push:
    # Ensure build job passes before pushing image.
    needs: build

    runs-on: ubuntu-20.04

    steps:
      - name: Check Out Repo 
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Get the Ref
        id: get-ref
        uses: ankitvgupta/ref-to-tag-action@master
        with:
          ref: ${{ github.ref }}
          head_ref: ${{ github.head_ref }}

      - name: Get the tag
        run: echo "The tag was ${{ steps.get-ref.outputs.tag }}"

      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{ secrets.DOCKER_HUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.get-ref.outputs.tag }}

      - name: Push the Docker image
        run: docker push ${{ env.IMAGE_NAME }}:${{ steps.get-ref.outputs.tag }}

      - name: Add additional label to the Docker image
        run: docker tag ${{ env.IMAGE_NAME }}:${{ steps.get-ref.outputs.tag }} ${{ env.IMAGE_NAME }}:latest-dev

      - name: Push the Docker image
        run: docker push ${{ env.IMAGE_NAME }}:latest-dev
